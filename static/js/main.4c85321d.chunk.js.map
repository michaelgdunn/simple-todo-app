{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js"],"names":["TodoItem","alert","this","props","todo","completed","id","title","className","type","checked","onChange","handleChangeProps","onClick","deleteTodoProps","style","fontStyle","color","opacity","textDecoration","React","Component","TodoList","todos","map","key","Header","prevProps","prevState","x","Math","floor","random","y","z","bgColor","headerSpan","document","getElementById","innerHTML","backgroundColor","padding","lineHeight","fontSize","marginBottom","InputTodo","state","e","setState","target","name","value","handleSubmit","preventDefault","console","log","addTodoProps","onSubmit","placeholder","TodoContainer","show","handleChange","deleteTodo","axios","delete","then","response","filter","addTodo","post","data","get","ReactDOM","render"],"mappings":"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","file":"static/js/main.4c85321d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass TodoItem extends React.Component {\r\n\r\n\r\n  componentWillUnmount() {\r\n    alert(\"Item about to be deleted!\");\r\n  }\r\n\r\n  render() {\r\n    const completedStyle = {\r\n      fontStyle: \"italic\",\r\n      color: \"#d35e0f\",\r\n      opacity: 0.4,\r\n      textDecoration: \"line-through\"\r\n    }\r\n\r\n    const { completed, id, title } = this.props.todo\r\n\r\n    return <li className=\"todo-item\">\r\n      <input type=\"checkbox\"\r\n        checked={completed}\r\n        onChange={() => this.props.handleChangeProps(id)}\r\n      />\r\n      <button onClick={() => this.props.deleteTodoProps(id)}>\r\n        Delete\r\n      </button>\r\n      <span style={completed ? completedStyle : null}>{title}</span>\r\n\r\n    </li>\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default TodoItem;","import React from 'react';\r\n\r\nimport TodoItem from './TodoItem';\r\n\r\nclass TodoList extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n         <ul>\r\n          {this.props.todos.map(todo => (\r\n           <TodoItem \r\n            key={todo.id} \r\n            todo={todo}\r\n            handleChangeProps={this.props.handleChangeProps}\r\n            deleteTodoProps={this.props.deleteTodoProps}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoList","import React, { Component } from \"react\"\r\n\r\nclass Header extends Component {\r\n\r\ncomponentDidUpdate(prevProps, prevState) {\r\n\r\n  var x = Math.floor(Math.random() * 256);\r\n  var y = Math.floor(Math.random() * 256);\r\n  var z = Math.floor(Math.random() * 256);\r\n\r\n  var bgColor = `rgb(${x},${y},${z})`;\r\n\r\n  if (prevProps.headerSpan !== this.props.headerSpan) {\r\n    document.getElementById('inH1').innerHTML = \"clicked\";\r\n    document.getElementById('inH1').style.backgroundColor = bgColor;\r\n  }\r\n}\r\n\r\n  render() {\r\n    const headerStyle = {\r\n      padding: \"20px 0\",\r\n      lineHeight: \"2em\",\r\n    }\r\n\r\n    return (\r\n      <header style={headerStyle}>\r\n        <h1 style={{ fontSize: \"25px\", marginBottom: \"15px\" }}>\r\n          Simple Todo App <span id=\"inH1\"></span>\r\n        </h1>\r\n        <p style={{ fontSize: \"19px\" }}>\r\n          Please add to-dos item(s) through the input field\r\n        </p>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react';\r\n\r\nclass InputTodo extends Component {\r\n\r\n  state = {\r\n    title: \"\"\r\n  }\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(this.state.title);\r\n    this.props.addTodoProps(this.state.title);\r\n    this.setState({\r\n      title: \"\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className=\"form-container\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"input-text\"\r\n          placeholder=\"Add Todo...\"\r\n          value={this.state.title}\r\n          name=\"title\"\r\n          onChange={this.onChange} />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"input-submit\"\r\n          value=\"Submit\" />\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InputTodo","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport axios from 'axios';\r\n\r\nimport TodoList from './TodoList';\r\nimport Header from './Header';\r\nimport InputTodo from './InputTodo';\r\n\r\n\r\n\r\nclass TodoContainer extends React.Component {\r\n\r\n\r\n  state = {\r\n    todos: [],\r\n    show: false\r\n  }\r\n\r\n  handleChange = id => {\r\n    this.setState(\r\n      {\r\n        todos: this.state.todos.map(todo => {\r\n          if (todo.id === id) {\r\n            todo.completed = !todo.completed\r\n\r\n          }\r\n\r\n          return todo;\r\n        }),\r\n        show: !this.state.show\r\n      }\r\n    )\r\n  }\r\n\r\n  deleteTodo = id => {\r\n    console.log('deleted', id);\r\n\r\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n      .then(response =>\r\n        this.setState({\r\n          todos: [\r\n            ...this.state.todos.filter(todo => {\r\n              return todo.id !== id;\r\n            })\r\n          ]\r\n        })\r\n      )\r\n  }\r\n\r\n  addTodo = title => {\r\n\r\n    axios.post(\"https://jsonplaceholder.typicode.com/todos\", {\r\n      title: title,\r\n      completed: false\r\n    }).then(response =>\r\n      this.setState({\r\n        todos: [...this.state.todos, response.data]\r\n      }))\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=10\")\r\n      .then(response => this.setState({ todos: response.data }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Header headerSpan={this.state.show} />\r\n        <InputTodo addTodoProps={this.addTodo} />\r\n        <TodoList todos={this.state.todos} handleChangeProps={this.handleChange} deleteTodoProps={this.deleteTodo} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TodoContainer","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport TodoContainer from './components/TodoContainer'\r\nimport './App.css';\r\n\r\nReactDOM.render(<TodoContainer />, document.getElementById('root'));"],"sourceRoot":""}